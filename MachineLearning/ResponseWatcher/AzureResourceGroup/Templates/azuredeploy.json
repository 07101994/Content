{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "callback_url": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "http://example.com"
    },
    "storage_a_location": {
      "type": "string",
      "defaultValue": "westeurope",
      "allowedValues": [
        "northwestus",
        "eastasia",
        "southeastasia",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "centralus",
        "northeurope",
        "westeurope",
        "japaneast",
        "japanwest",
        "brazilsouth",
        "unitedstates",
        "europe",
        "asiapacific",
        "japan",
        "brazil"
      ],
      "metadata": {
        "description": "Storage A location"
      }
    },
    "storage_a_type": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage account A type"
      }
    },
    "storage_b_location": {
      "type": "string",
      "defaultValue": "southeastasia",
      "allowedValues": [
        "northwestus",
        "eastasia",
        "southeastasia",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "centralus",
        "northeurope",
        "westeurope",
        "japaneast",
        "japanwest",
        "brazilsouth",
        "unitedstates",
        "europe",
        "asiapacific",
        "japan",
        "brazil"
      ],
      "metadata": {
        "description": "Storage B location"
      }
    },
    "storage_b_type": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage account B type"
      }
    },
    "service_plan_SKU": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard"
      ],
      "defaultValue": "Basic"
    },
    "service_plan_worker_size": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0"
    },
    "jobCollectionSku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    }
  },
  "variables": {
    "storageAName": "[concat('storagea', uniqueString(resourceGroup().id))]",
    "storageBName": "[concat('storageb', uniqueString(resourceGroup().id))]",
    "servicePlanName": "[concat('serviceplan', uniqueString(resourceGroup().id))]",
    "webAppName": "[concat('webapp', uniqueString(resourceGroup().id))]",
    "jobCollectionName": "[concat('jobcollection', uniqueString(resourceGroup().id))]",
    "collectJobName": "[concat('collectjob', uniqueString(resourceGroup().id))]",
    "retrainJobName": "[concat('retrainjob', uniqueString(resourceGroup().id))]",
    "compareJobName": "[concat('comparejob', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "name": "[variables('storageAName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('storage_a_location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "StorageA"
      },
      "properties": {
        "accountType": "[parameters('storage_a_type')]"
      }
    },
    {
      "name": "[variables('storageBName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('storage_b_location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "StorageB"
      },
      "properties": {
        "accountType": "[parameters('storage_b_type')]"
      }
    },
    {
      "name": "[variables('servicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-06-01",
      "dependsOn": [ ],
      "tags": {
        "displayName": "serviceplan"
      },
      "properties": {
        "name": "[variables('servicePlanName')]",
        "sku": "[parameters('service_plan_SKU')]",
        "workerSize": "[parameters('service_plan_worker_size')]",
        "numberOfWorkers": 1
      }
    },
    {
      "name": "[variables('webAppName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('servicePlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('servicePlanName'))]": "Resource",
        "displayName": "webapp"
      },
      "properties": {
        "name": "[variables('webAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('servicePlanName'))]"
      },
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('webAppName'))]"
          ],
          "tags": {
            "displayName": "appSettings"
          },
          "properties": {
            "StorageAConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAName')), '2015-05-01-preview').key1)]",
            "StorageBConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageBName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageBName')), '2015-05-01-preview').key1)]",
            "CallbackUrl": "[parameters('callback_url')]"
          }
        }

      ]
    },
    {
      "apiVersion": "2016-01-01",
      "type": "Microsoft.Scheduler/jobCollections",
      "name": "[variables('jobCollectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "[parameters('jobCollectionSku')]"
        }
      },
      "resources": [
        {
          "apiVersion": "2016-01-01",
          "type": "jobs",
          "name": "[variables('collectJobName')]",
          "dependsOn": [
            "[concat('Microsoft.Scheduler/jobCollections/', variables('jobCollectionName'))]"
          ],
          "properties": {
            "state": "Disabled",
            "action": {
              "type": "HTTP",
              "request": {
                "uri": "[concat('http://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).hostNames[0], '/api/MachineLearning/Collect')]",
                "method": "GET",
                "retryPolicy": {
                  "retryType": "None"
                }
              }
            },
            "recurrence": {
              "interval": 5,
              "frequency": "Minute"
            }
          }
        },
        {
          "apiVersion": "2016-01-01",
          "type": "jobs",
          "name": "[variables('retrainJobName')]",
          "dependsOn": [
            "[concat('Microsoft.Scheduler/jobCollections/', variables('jobCollectionName'))]"
          ],
          "properties": {
            "state": "Disabled",
            "action": {
              "type": "HTTP",
              "request": {
                "uri": "[concat('http://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).hostNames[0], '/api/MachineLearning/Retrain')]",
                "method": "GET",
                "retryPolicy": {
                  "retryType": "None"
                }
              }
            },
            "recurrence": {
              "interval": 1,
              "frequency": "Day"
            }
          }
        },
        {
          "apiVersion": "2016-01-01",
          "type": "jobs",
          "name": "[variables('compareJobName')]",
          "dependsOn": [
            "[concat('Microsoft.Scheduler/jobCollections/', variables('jobCollectionName'))]"
          ],
          "properties": {
            "state": "Disabled",
            "action": {
              "type": "HTTP",
              "request": {
                "uri": "[concat('http://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).hostNames[0], '/api/MachineLearning/Compare/api/MachineLearning/Compare?fileSize=17000000&alarmLevel=2.0')]",
                "method": "GET",
                "retryPolicy": {
                  "retryType": "None"
                }
              }
            },
            "recurrence": {
              "interval": 17,
              "frequency": "Minute"
            }
          }
        }
      ]
    }

  ],
  "outputs": {
  }
}
